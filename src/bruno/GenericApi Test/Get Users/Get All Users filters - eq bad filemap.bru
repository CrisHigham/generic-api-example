meta {
  name: Get All Users filters - eq bad filemap
  type: http
  seq: 10
}

get {
  url: {{secure}}{{server}}{{base}}/test-user?badFileMap=eq:Wayne
  body: json
  auth: bearer
}

params:query {
  badFileMap: eq:Wayne
}

auth:bearer {
  token: {{token}}
}

tests {
  let testCode = 200;
  const responseJson = res.getBody();
  
  test("Get All Users - filters - eq bad filemap", function(){
      expect(res.getStatus()).to.equal(testCode)
      // bad parameter ignored and default records returned
      expect(responseJson.noOfRecords).to.eql(10);
  })
  
  if (res.getStatus() != testCode){
      console.log(responseJson);
      bru.runner.stopExecution();
  }
}
